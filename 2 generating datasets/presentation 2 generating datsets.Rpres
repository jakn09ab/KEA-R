presentation 2 working with dates and generating datsets
========================================================
author: JSK@clin.au.dk
date: 15 oktober 2018
autosize: true

Todays agenda
========================================================

-working with dates in R
-generating datasets
-merging data
-generating automated flowcharts

Sourcing files
========================================================

Dates
========================================================
Lubridate is a tidyverse package that works great with dates. 
```{r}
#install.packages("lubridate")
library(lubridate)
```
Often one will have data saved in a character format
```{r}
date <- "31-01-2012"
dmy(date)
class(dmy(date))
```

Dates 2
========================================================
the variables may have different positioning
```{r}
date <- "01-31-2012"
mdy(date) #changed order (month-day-year)
class(dmy(date))
```
Or even a combination of numeric and Character
```{r}
date <- "31-JAN-2012"
dmy(date)
class(dmy(date))
```
But lubridate fixes this nicely.

Dates 2
========================================================
the variables may have different positioning
```{r}
date <- dmy(date)
```
Or even a combination of numeric and Character
```{r}
date <- "31-JAN-2012"
dmy(date)
class(dmy(date))
```
But lubridate fixes this nicely.

Dates 3
========================================================
it works with logical operators 
```{r}
date > dmy("31-12-2014") # and even +, - and >, <= or NOT EQUAL TO: !=
dmy("31-12-2014") - date
as.numeric(dmy("31-12-2014") - date) #and converts to numeric
year(date) # gives the year as numeric
```


merging two datasets
========================================================

```{r}
#source data files
#merging two data.tables requires the function to know what key variable to merge by
setkey(lsr, ID)
setkey(DATA, ID)
merge(lsr, DATA)

```

Creating flowcharts
========================================================
```{r}
library(DiagrammeR) #package for flowcharts. Graphs are primarily drawn in the DOT language using the GraphViz and `mermaid styles. :-(
# Define some sample data, and this syntax is easily adapted to a regular flowchart.
data <- list(a=1000, b=800, c=600, d=400)
DiagrammeR::grViz("
digraph graph2 {

graph [layout = dot]

# node definitions with substituted label text
node [shape = rectangle, width = 4, fillcolor = Biege]
a [label = '@@1']
b [label = '@@2']
c [label = '@@3']
d [label = '@@4']

a -> b -> c ->d 
a->d
}

[1]:  paste0('CPR Raw Data (n = ', data$a, ')')
[2]: paste0('Remove Errors (n = ', data$b, ')')
[3]: paste0('limit to population (n = ', data$c, ')')
[4]: paste0('something amazing (n = ', data$d, ')')
")
```


Excercises
========================================================
-source cpr from file.
-cpr may have duplicate IDs. Filter these so no two IDs has different values. (HINT: unique())
-fix dates in cpr (turn them into class="DATE")
-create new column in cpr that indicates what year they were born.
-remove patients dying after 2018 (too weird) hint: first condition of DATA[filter,manipulate , by =]
-create a new population called population by sampling 75% of cpr.
-population includes only two columns: CPR_ENCRYPTED and an indexdate
-indexdate is calculated as BIRTHDAY+365*rnorm(1, mean=60, sd = 15)
-restrict lpr so it only includes patients included in population.
-create flowchart that automatically updates to reflect N in the stages of cpr reduction to population.

push solution to github  excercice2_yourinials.R

Excercise for next time: Create labka dataset 
========================================================

- CPR_ENCRYPTED: all unqiue CPR_ENCRYPTED from cpr
-each unique CPR_ENCRYPTED should have between 0 and 10 lab-results: hint: look at how I generate lsr prescription data
- SampleDate: BIRTHDAY+365*rnorm(1, mean=60, sd = 15)
- result rnorm(1, mean=20, sd = 15)
- analysisno random number between 10.000 and 1.000.000

- save labka_yourinitals.R in lesson 2 assignment 2 folder and push to github
